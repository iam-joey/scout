version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app-network
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '3000:3000'
    depends_on:
      - redis
    networks:
      - app-network
  transfers-ws:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ['bun', 'run', 'workers/transfers/index.ts']
    depends_on:
      - redis
    networks:
      - app-network
  transfers-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ['bun', 'run', 'workers/transfers/worker.ts']
    depends_on:
      - redis
    networks:
      - app-network
  oracles-ws:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ['bun', 'run', 'workers/oracles/index.ts']
    depends_on:
      - redis
    networks:
      - app-network
  oracles-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ['bun', 'run', 'workers/oracles/worker.ts']
    depends_on:
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
